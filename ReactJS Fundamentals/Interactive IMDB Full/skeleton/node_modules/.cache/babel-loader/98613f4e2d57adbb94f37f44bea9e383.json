{"ast":null,"code":"import _objectSpread from \"E:\\\\projects\\\\JS-Web-January-2019\\\\ReactJS Fundamentals\\\\Interactive IMDB Full\\\\skeleton\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\projects\\\\JS-Web-January-2019\\\\ReactJS Fundamentals\\\\Interactive IMDB Full\\\\skeleton\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\projects\\\\JS-Web-January-2019\\\\ReactJS Fundamentals\\\\Interactive IMDB Full\\\\skeleton\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\projects\\\\JS-Web-January-2019\\\\ReactJS Fundamentals\\\\Interactive IMDB Full\\\\skeleton\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\projects\\\\JS-Web-January-2019\\\\ReactJS Fundamentals\\\\Interactive IMDB Full\\\\skeleton\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"E:\\\\projects\\\\JS-Web-January-2019\\\\ReactJS Fundamentals\\\\Interactive IMDB Full\\\\skeleton\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\projects\\\\JS-Web-January-2019\\\\ReactJS Fundamentals\\\\Interactive IMDB Full\\\\skeleton\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\projects\\\\JS-Web-January-2019\\\\ReactJS Fundamentals\\\\Interactive IMDB Full\\\\skeleton\\\\src\\\\Create\\\\Create.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport './Create.css';\n\nvar Create =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Create, _Component);\n\n  function Create(props) {\n    var _this;\n\n    _classCallCheck(this, Create);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Create).call(this, props));\n    _this.state = {\n      movie: {\n        title: '',\n        storyLine: '',\n        trailerUrl: '',\n        posterUrl: ''\n      },\n      redirect: false\n    };\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_this));\n    _this.onSubmitHandler = _this.onSubmitHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Create, [{\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(event) {\n      var name = event.target.name;\n\n      if (this.state.movie.hasOwnProperty(name)) {\n        var value = event.target.value;\n\n        var movie = _objectSpread({}, this.state.movie);\n\n        movie[name] = value;\n        this.setState({\n          movie: movie\n        });\n      }\n    }\n  }, {\n    key: \"onSubmitHandler\",\n    value: function onSubmitHandler(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n\n      if (!this.isMovieValid(this.state.movie)) {\n        return;\n      }\n\n      fetch('http://localhost:9999/feed/movie/create', {\n        method: 'POST',\n        body: JSON.stringify(this.state.movie),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.props.user.token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        // TODO: Toastify success message.\n        toast.success(data.message);\n\n        _this2.setState({\n          redirect: true\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"isMovieValid\",\n    value: function isMovieValid(movie) {\n      var isValid = true;\n\n      if (!movie.title || !movie.title.trim()) {\n        toast.error(\"Title is required!\");\n        isValid = false;\n      }\n\n      if (!movie.storyLine || !movie.storyLine.trim()) {\n        toast.error(\"Story line is required!\");\n        isValid = false;\n      }\n\n      if (!movie.trailerUrl || !movie.trailerUrl.trim()) {\n        toast.error(\"Trailer Url is required!\");\n        isValid = false;\n      }\n\n      if (!movie.posterUrl || !movie.posterUrl.trim()) {\n        toast.error(\"Poster Url is required!\");\n        isValid = false;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.user.isAdmin || this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Create Movie\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        placeholder: \"Titanic\",\n        onChange: this.onChangeHandler,\n        value: this.state.movie.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"storyLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Story Line\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"storyLine\",\n        name: \"storyLine\",\n        placeholder: \"Text\",\n        onChange: this.onChangeHandler,\n        value: this.state.movie.storyLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"trailerUrl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Trailer Url\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"trailerUrl\",\n        name: \"trailerUrl\",\n        placeholder: \"https://www.youtube.com/watch?v=DNyKDI9pn0Q\",\n        onChange: this.onChangeHandler,\n        value: this.state.movie.trailerUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"poster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Movie Poster\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"poster\",\n        name: \"posterUrl\",\n        placeholder: \"https://encrypted-tbn0.gstatic.com/images...png\",\n        onChange: this.onChangeHandler,\n        value: this.state.movie.posterUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Create;\n}(Component);\n\nexport default Create;","map":{"version":3,"sources":["E:\\projects\\JS-Web-January-2019\\ReactJS Fundamentals\\Interactive IMDB Full\\skeleton\\src\\Create\\Create.js"],"names":["React","Component","Redirect","toast","Create","props","state","movie","title","storyLine","trailerUrl","posterUrl","redirect","onChangeHandler","bind","onSubmitHandler","event","name","target","hasOwnProperty","value","setState","preventDefault","isMovieValid","fetch","method","body","JSON","stringify","headers","user","token","then","response","json","data","success","message","catch","err","console","log","isValid","trim","error","isAdmin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport './Create.css';\r\n\r\nclass Create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      movie: {\r\n        title: '',\r\n        storyLine: '',\r\n        trailerUrl: '',\r\n        posterUrl: '',\r\n      },\r\n      redirect: false,\r\n    };\r\n\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n  }\r\n\r\n  onChangeHandler(event) {\r\n    const name = event.target.name;    \r\n\r\n    if(this.state.movie.hasOwnProperty(name)) {\r\n      const value = event.target.value;\r\n\r\n      let movie = {...this.state.movie};\r\n      movie[name] = value;\r\n\r\n      this.setState({movie});\r\n    }\r\n  }\r\n\r\n  onSubmitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    if(!this.isMovieValid(this.state.movie)) {      \r\n      return;\r\n    }\r\n    \r\n    fetch('http://localhost:9999/feed/movie/create', {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state.movie),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + this.props.user.token,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // TODO: Toastify success message.\r\n        toast.success(data.message);\r\n\r\n        this.setState({\r\n          redirect: true,\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  isMovieValid(movie) {\r\n    let isValid = true;\r\n\r\n    if(!movie.title || !movie.title.trim()) {\r\n      toast.error(\"Title is required!\");\r\n      isValid = false;\r\n    }\r\n    if(!movie.storyLine || !movie.storyLine.trim()) {\r\n      toast.error(\"Story line is required!\");\r\n      isValid = false;\r\n    }\r\n    if(!movie.trailerUrl || !movie.trailerUrl.trim()) {\r\n      toast.error(\"Trailer Url is required!\");\r\n      isValid = false;\r\n    }\r\n    if(!movie.posterUrl || !movie.posterUrl.trim()) {\r\n      toast.error(\"Poster Url is required!\");\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  render() {    \r\n    if(!this.props.user.isAdmin || this.state.redirect) {\r\n      return <Redirect to='/' />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"Create\">\r\n         <h1>Create Movie</h1>\r\n        <form onSubmit={this.onSubmitHandler} >\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Titanic\" onChange={this.onChangeHandler} value={this.state.movie.title} />\r\n\r\n          <label htmlFor=\"storyLine\">Story Line</label>\r\n          <input type=\"text\" id=\"storyLine\" name=\"storyLine\" placeholder=\"Text\" onChange={this.onChangeHandler} value={this.state.movie.storyLine} />\r\n\r\n          <label htmlFor=\"trailerUrl\">Trailer Url</label>\r\n          <input type=\"text\" id=\"trailerUrl\" name=\"trailerUrl\" placeholder=\"https://www.youtube.com/watch?v=DNyKDI9pn0Q\" onChange={this.onChangeHandler} value={this.state.movie.trailerUrl} />\r\n\r\n          <label htmlFor=\"poster\">Movie Poster</label>\r\n          <input type=\"text\" id=\"poster\" name=\"posterUrl\" placeholder=\"https://encrypted-tbn0.gstatic.com/images...png\" onChange={this.onChangeHandler} value={this.state.movie.posterUrl} />\r\n\r\n          <input type=\"submit\" value=\"Create\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Create;"]},"metadata":{},"sourceType":"module"}