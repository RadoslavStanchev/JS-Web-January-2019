{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\JS-Web-January-2019\\\\ReactJS Fundamentals\\\\Interactive IMDB Full\\\\skeleton\\\\src\\\\Home\\\\Trailer.js\";\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nvar styles = {\n  trailer: {\n    width: '640px',\n    height: '360px'\n  },\n  innerTrailer: {\n    width: '100%',\n    height: '100%'\n  }\n};\n\nfunction Trailer(props) {\n  var containsEmbed = props.movie.trailerUrl.indexOf('/embed') > 0;\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Trailer of \", props.movie.title), React.createElement(\"div\", {\n    className: \"trailer\",\n    style: styles.trailer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.innerTrailer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, containsEmbed ? React.createElement(\"iframe\", {\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    title: \"YouTube video player\",\n    width: \"100%\",\n    height: \"100%\",\n    src: props.movie.trailerUrl,\n    id: props.movie._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : React.createElement(ReactPlayer, {\n    url: props.movie.trailerUrl,\n    playing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n}\n\nexport default Trailer;","map":{"version":3,"sources":["E:\\projects\\JS-Web-January-2019\\ReactJS Fundamentals\\Interactive IMDB Full\\skeleton\\src\\Home\\Trailer.js"],"names":["React","ReactPlayer","styles","trailer","width","height","innerTrailer","Trailer","props","containsEmbed","movie","trailerUrl","indexOf","title","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GADE;AAKXC,EAAAA,YAAY,EAAE;AACVF,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,MAAM,EAAE;AAFE;AALH,CAAf;;AAWA,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,MAAIC,aAAa,GAAGD,KAAK,CAACE,KAAN,CAAYC,UAAZ,CAAuBC,OAAvB,CAA+B,QAA/B,IAA2C,CAA/D;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBJ,KAAK,CAACE,KAAN,CAAYG,KAA5B,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAEX,MAAM,CAACC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAED,MAAM,CAACI,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQG,aAAa,GACb;AACI,IAAA,KAAK,EAAC,yEADV;AAEI,IAAA,KAAK,EAAC,sBAFV;AAGI,IAAA,KAAK,EAAC,MAHV;AAII,IAAA,MAAM,EAAC,MAJX;AAKI,IAAA,GAAG,EAAED,KAAK,CAACE,KAAN,CAAYC,UALrB;AAMI,IAAA,EAAE,EAAEH,KAAK,CAACE,KAAN,CAAYI,GANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,GAUb,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEN,KAAK,CAACE,KAAN,CAAYC,UAA9B;AAA0C,IAAA,OAAO,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZR,CADJ,CAFJ,CADJ;AAsBH;;AAED,eAAeJ,OAAf","sourcesContent":["import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst styles = {\r\n    trailer: {\r\n        width: '640px',\r\n        height: '360px',\r\n    },\r\n    innerTrailer: {\r\n        width: '100%',\r\n        height: '100%',        \r\n    }\r\n}\r\n\r\nfunction Trailer(props) {    \r\n    let containsEmbed = props.movie.trailerUrl.indexOf('/embed') > 0;\r\n\r\n    return (\r\n        <span>\r\n            <h2>Trailer of {props.movie.title}</h2>            \r\n            <div className=\"trailer\" style={styles.trailer}>\r\n                <div style={styles.innerTrailer}>\r\n                    {\r\n                        containsEmbed ?\r\n                        <iframe                            \r\n                            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                            title=\"YouTube video player\" \r\n                            width=\"100%\" \r\n                            height=\"100%\" \r\n                            src={props.movie.trailerUrl}\r\n                            id={props.movie._id}>\r\n                        </iframe>\r\n                        :\r\n                        <ReactPlayer url={props.movie.trailerUrl} playing/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </span>\r\n    );    \r\n}\r\n\r\nexport default Trailer;"]},"metadata":{},"sourceType":"module"}